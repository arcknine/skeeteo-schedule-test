.row
  .input-field.col.s12.radio-type
    .col.s12.m3.l3
      label
        = form.radio_button :type, 'Schedule::Regular', class: 'with-gap', checked: true, data: { start: "Departure Time", end: "Arrival Time" }
        span Regular
    .col.s12.m3.l3
      label
        = form.radio_button :type, 'Schedule::Maintenance', class: 'with-gap', data: { placeholder: "Maintenance Date", start: "Start Time", end: "End Time" }
        span Maintenance
    .col.s12.m3.l3
      label
        = form.radio_button :type, 'Schedule::Special', class: 'with-gap', data: { placeholder: "Special Trip Date", start: "Departure Time", end: "Arrival Time" }
        span Special
    .col.s12.m3.l3
      label
        = form.radio_button :type, 'Schedule::Idle', class: 'with-gap', data: { placeholder: "No Trip Date", start: "Start Time", end: "End Time" }
        span No Trip
  .input-field.col.s12#not-regular style="display: none"
    i.material-icons.prefix date_range
    = form.text_field :date, placeholder: "Date", class: 'datepicker validate', disabled: true, value: "#{form.object.date.strftime("%b %d, %Y") if form.object.date.present? && !form.object.new_record?}"
  .input-field.col.s12#regular
    i.material-icons.prefix event
    = form.select :days, options_for_select(Schedule::DAYS.invert, :selected => form.object.days), {}, { :multiple => true }
  .input-field.col.s12
    i.material-icons.prefix access_time
    = form.text_field :start_time, placeholder: "Departure Time", class: 'timepicker validate', value: "#{form.object.start_time.strftime("%I:%M %P") unless form.object.new_record?}"
  .input-field.col.s12
    i.material-icons.prefix access_time
    = form.text_field :end_time, placeholder: "Arrival Time", class: 'timepicker validate', value: "#{form.object.end_time.strftime("%I:%M %P") unless form.object.new_record?}"
  .input-field.col.s12
    i.material-icons.prefix event_note
    = form.text_area :remarks, placeholder: "Remarks", class: 'materialize-textarea'
  .input-field.col.s12
    = hidden_field_tag :type, @schedule.type
    = form.button :submit, class: 'btn waves-effect waves-light right'
      | Submit
      i.material-icons.right send

coffee:
  updateForm = (element) ->
    $("#schedule_start_time").attr 'placeholder', $(element).data('start')
    $("#schedule_end_time").attr 'placeholder', $(element).data('end')

    if $(element).val() == 'Schedule::Regular'
      $("#not-regular").hide()
      $("#not-regular input").prop('disabled', true)

      $("#regular").show()
      $("#regular input").prop('disabled', false)
    else
      $("#regular").hide()
      $("#regular input").prop('disabled', true)

      $("#not-regular").show()
      $("#not-regular input").prop('disabled', false).attr('placeholder', $(element).data('placeholder'))

  $(document).ready ->
    $('.timepicker').timepicker()
    $('.datepicker').datepicker()
    $('select').formSelect()

    updateForm(".radio-type input[type=radio]:checked")

  $(".radio-type input[type=radio]").on 'click', ->
    updateForm(this)